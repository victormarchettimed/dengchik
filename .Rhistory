summary_idade_chikungunya <- summary(idade_chikungunya)
print(summary_idade_chikungunya)
# Média e desvio padrão da idade para casos de chikungunya
media_chikungunya <- mean(idade_chikungunya)
desvio_padrao_chikungunya <- sd(idade_chikungunya)
cat("Média da idade para casos de chikungunya:", media_chikungunya, "\n")
cat("Desvio padrão da idade para casos de chikungunya:", desvio_padrao_chikungunya, "\n")
# Intervalo de confiança da média para casos de chikungunya
ic_mean_chikungunya <- t.test(idade_chikungunya)$conf.int
print(ic_mean_chikungunya)
# Dados de idade para casos de dengue
idade_dengue <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "DENGUE"]
# Dados de idade para casos de chikungunya
idade_chikungunya <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "CHIKUNGUNYA"]
# Teste t para comparar médias
resultado_teste_t <- t.test(idade_dengue, idade_chikungunya)
# Exibir o resultado
print(resultado_teste_t)
CONFIRMADOS$SEX[is.na(CONFIRMADOS$SEX)] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "I"] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "M"] <- "Masculine"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "F"] <- "Feminine"
CONFIRMADOS$RACE[is.na(CONFIRMADOS$RACE)] <- "Missing"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 1] <- "White"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 2] <- "Black"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 3] <- "Yellow"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 4] <- "Brown"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 5] <- "Indigenous"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 9] <- "Missing"
# Selecionar as colunas de interesse e transformar as variáveis
CONFIRMADOS <- CONFIRMADOS %>%
select(SEX, RACE, TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN) %>%
mutate(across(everything(), as.factor))
# Número de colunas no dataframe CONFIRMADOS
num_colunas <- ncol(CONFIRMADOS)
# Inicializar o índice da coluna
i <- 1
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
print(paste("Dados sobre", nome_coluna))
# Criar a tabela de contingência 2x2
tabela_contingencia <- table(CONFIRMADOS$TYPE, dados_coluna)
print(paste("Tabela 2x2 -", nome_coluna))
print(tabela_contingencia)
# Calcular proporções da tabela de contingência
tabela_proporcoes <- prop.table(tabela_contingencia, 1)
print(paste("Proporções da tabela 2x2 -", nome_coluna))
print(tabela_proporcoes)
# Valor-p para a variável preditora
valor_p <- chisq.test(tabela_contingencia)
print(paste("Valor-p - ", nome_coluna))
print(valor_p[3])
i <- i + 1
}
# Inicializar o índice da coluna
i <- 1
# Lista para armazenar os resultados de odds ratio e intervalo de confiança
resultado <- list()
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
print(paste("Odds ratio para ", nome_coluna))
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
# Ajustar modelo de regressão logística
modelo_logistico <- glm(TYPE ~ dados_coluna, family = binomial, data = CONFIRMADOS)
# Extrair coeficiente e intervalo de confiança para a variável preditora
coeficiente <- coef(modelo_logistico)[2]  # Coeficiente da variável preditora
conf_int <- confint(modelo_logistico)[2,]     # Intervalo de confiança para o coeficiente
# Calcular odds ratio e intervalo de confiança
odds_ratio <- exp(coeficiente)  # Odds ratio
lower_ci <- exp(conf_int[1])    # Limite inferior do intervalo de confiança
upper_ci <- exp(conf_int[2])    # Limite superior do intervalo de confiança
# Armazenar os resultados
resultado[[nome_coluna]] <- c(odds_ratio, lower_ci, upper_ci)
print(resultado[[nome_coluna]])
# Avançar para próxima coluna
i <- i + 1
}
# Resultados finais
resultado
library(broom)
# Ajuste do modelo de regressão logística
modelo <- glm(TYPE ~ FEVER + MYALGIA + HEADACHE + EXANTHEM + VOMITING +
NAUSEA + BACK_PAIN + CONJUNCTIVITIS + ARTHRITIS +
ARTHRALGIA + PETECHIA + RETRO_ORBITAL_PAIN,
data = CONFIRMADOS, family = binomial)
# Sumário do modelo
summary(modelo)
# Extrair coeficientes ajustados e intervalos de confiança
odds_ratio <- tidy(modelo, exponentiate = TRUE)
# Mostrar os resultados
print(odds_ratio)
CONFIRMADOS_CSV <- CONFIRMADOS %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN)
write.csv(CONFIRMADOS_CSV %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN),
file = "confirmados.csv", row.names = FALSE)
summary(CHIKUNGUNYA$RESUL_PCR_)
summary(as.factor(CHIKUNGUNYA$RESUL_PCR_))
summary(as.factor(DENGUE$RESUL_PCR_))
# Instalar e carregar pacotes necessários
# Se algum pacote não estiver instalado, descomente a linha de instalação correspondente
# install.packages(c("remotes", "microdatasus", "pROC", "caret", "randomForest", "sf", "e1071"))
library(dplyr)
library(microdatasus)
library(survival)
library(ggplot2)
library(sf)
library(randomForest)
library(pROC)
library(caret)
library(e1071)  # Para SVM
library(epitools)
# Buscar e processar os dados do SINAN-DENGUE para o ano de 2022 no Espírito Santo
# DENGUE <- fetch_datasus(year_start = 2018, month_start = 1,
#                         year_end = 2022, month_end = 12, information_system = "SINAN-DENGUE")
DENGUE_CONFIRMADOS <- DENGUE %>%
filter(RESUL_SORO == 1 | RESUL_NS1 == 1 | RESUL_VI_N == 1 | RESUL_PCR_ == 1 | HISTOPA_N == 1 | IMUNOH_N == 1) %>%
mutate(TYPE = "DENGUE")
DENGUE_CONFIRMADOS <- DENGUE %>%
filter(RESUL_PCR_ == 1) %>%
mutate(TYPE = "DENGUE")
# Buscar e processar os dados do SINAN-DENGUE para o ano de 2022 no Espírito Santo
# CHIKUNGUNYA <- fetch_datasus(year_start = 2018, month_start = 1, uf = es,
#                              year_end = 2022, month_end = 12, information_system = "SINAN-CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS <- CHIKUNGUNYA %>%
filter(RES_CHIKS1 == 1 | RES_CHIKS2 == 1 | RESUL_PRNT == 1 | RESUL_PCR_ == 1 | HISTOPA_N == 1) %>%
mutate(TYPE = "CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS <- CHIKUNGUNYA %>%
filter(RESUL_PCR_ == 1) %>%
mutate(TYPE = "CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS$PLAQ_MENOR <- as.character(CHIKUNGUNYA_CONFIRMADOS$PLAQ_MENOR)
DENGUE_CONFIRMADOS$PLAQ_MENOR <- as.character(DENGUE_CONFIRMADOS$PLAQ_MENOR)
# Mesclar os dois dataframes
CONFIRMADOS <- bind_rows(DENGUE_CONFIRMADOS, CHIKUNGUNYA_CONFIRMADOS)
# Renomear variáveis de sintomas
CONFIRMADOS <- CONFIRMADOS %>%
rename(AGE = NU_IDADE_N,
SEX = CS_SEXO,
RACE = CS_RACA,
SCHOOLING = CS_ESCOL_N,
FEVER = FEBRE,
MYALGIA = MIALGIA,
HEADACHE = CEFALEIA,
EXANTHEM = EXANTEMA,
VOMITING = VOMITO,
NAUSEA = NAUSEA,
BACK_PAIN = DOR_COSTAS,
CONJUNCTIVITIS = CONJUNTVIT,
ARTHRITIS = ARTRITE,
ARTHRALGIA = ARTRALGIA,
PETECHIA = PETEQUIA_N,
LEUKOPENIA = LEUCOPENIA,
RETRO_ORBITAL_PAIN = DOR_RETRO)
CONFIRMADOS <- CONFIRMADOS[CONFIRMADOS$AGE >= 4018,]
CONFIRMADOS$AGE <- CONFIRMADOS$AGE - 4000
CONFIRMADOS <- CONFIRMADOS[CONFIRMADOS$AGE < 60,]
# Convertendo os valores 2 para 0 e mantendo os valores 1 como 1
CONFIRMADOS <- CONFIRMADOS %>%
mutate(across(c(FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, LEUKOPENIA, RETRO_ORBITAL_PAIN),
~ ifelse(. == 2, 0, .)))
# Dados de idade para casos totais
idade <- CONFIRMADOS$AGE
# Resumo estatístico da idade para casos totais
summary_idade <- summary(idade)
print(summary_idade)
# Média e desvio padrão da idade para casos
media <- mean(idade)
desvio_padrao <- sd(idade)
cat("Média da idade para casos:", media, "\n")
cat("Desvio padrão da idade para casos:", desvio_padrao, "\n")
# Dados de idade para casos de dengue
idade_dengue <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "DENGUE"]
# Resumo estatístico da idade para casos de dengue
summary_idade_dengue <- summary(idade_dengue)
print(summary_idade_dengue)
# Média e desvio padrão da idade para casos de dengue
media_dengue <- mean(idade_dengue)
desvio_padrao_dengue <- sd(idade_dengue)
cat("Média da idade para casos de dengue:", media_dengue, "\n")
cat("Desvio padrão da idade para casos de dengue:", desvio_padrao_dengue, "\n")
# Dados de idade para casos de chikungunya
idade_chikungunya <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "CHIKUNGUNYA"]
# Resumo estatístico da idade para casos de chikungunya
summary_idade_chikungunya <- summary(idade_chikungunya)
print(summary_idade_chikungunya)
# Média e desvio padrão da idade para casos de chikungunya
media_chikungunya <- mean(idade_chikungunya)
desvio_padrao_chikungunya <- sd(idade_chikungunya)
cat("Média da idade para casos de chikungunya:", media_chikungunya, "\n")
cat("Desvio padrão da idade para casos de chikungunya:", desvio_padrao_chikungunya, "\n")
# Intervalo de confiança da média para casos de chikungunya
ic_mean_chikungunya <- t.test(idade_chikungunya)$conf.int
print(ic_mean_chikungunya)
# Dados de idade para casos de dengue
idade_dengue <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "DENGUE"]
# Dados de idade para casos de chikungunya
idade_chikungunya <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "CHIKUNGUNYA"]
# Teste t para comparar médias
resultado_teste_t <- t.test(idade_dengue, idade_chikungunya)
# Exibir o resultado
print(resultado_teste_t)
CONFIRMADOS$SEX[is.na(CONFIRMADOS$SEX)] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "I"] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "M"] <- "Masculine"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "F"] <- "Feminine"
CONFIRMADOS$RACE[is.na(CONFIRMADOS$RACE)] <- "Missing"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 1] <- "White"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 2] <- "Black"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 3] <- "Yellow"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 4] <- "Brown"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 5] <- "Indigenous"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 9] <- "Missing"
# Selecionar as colunas de interesse e transformar as variáveis
CONFIRMADOS <- CONFIRMADOS %>%
select(SEX, RACE, TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN) %>%
mutate(across(everything(), as.factor))
# Número de colunas no dataframe CONFIRMADOS
num_colunas <- ncol(CONFIRMADOS)
# Inicializar o índice da coluna
i <- 1
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
print(paste("Dados sobre", nome_coluna))
# Criar a tabela de contingência 2x2
tabela_contingencia <- table(CONFIRMADOS$TYPE, dados_coluna)
print(paste("Tabela 2x2 -", nome_coluna))
print(tabela_contingencia)
# Calcular proporções da tabela de contingência
tabela_proporcoes <- prop.table(tabela_contingencia, 1)
print(paste("Proporções da tabela 2x2 -", nome_coluna))
print(tabela_proporcoes)
# Valor-p para a variável preditora
valor_p <- chisq.test(tabela_contingencia)
print(paste("Valor-p - ", nome_coluna))
print(valor_p[3])
i <- i + 1
}
# Inicializar o índice da coluna
i <- 1
# Lista para armazenar os resultados de odds ratio e intervalo de confiança
resultado <- list()
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
print(paste("Odds ratio para ", nome_coluna))
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
# Ajustar modelo de regressão logística
modelo_logistico <- glm(TYPE ~ dados_coluna, family = binomial, data = CONFIRMADOS)
# Extrair coeficiente e intervalo de confiança para a variável preditora
coeficiente <- coef(modelo_logistico)[2]  # Coeficiente da variável preditora
conf_int <- confint(modelo_logistico)[2,]     # Intervalo de confiança para o coeficiente
# Calcular odds ratio e intervalo de confiança
odds_ratio <- exp(coeficiente)  # Odds ratio
lower_ci <- exp(conf_int[1])    # Limite inferior do intervalo de confiança
upper_ci <- exp(conf_int[2])    # Limite superior do intervalo de confiança
# Armazenar os resultados
resultado[[nome_coluna]] <- c(odds_ratio, lower_ci, upper_ci)
print(resultado[[nome_coluna]])
# Avançar para próxima coluna
i <- i + 1
}
# Resultados finais
resultado
library(broom)
# Ajuste do modelo de regressão logística
modelo <- glm(TYPE ~ FEVER + MYALGIA + HEADACHE + EXANTHEM + VOMITING +
NAUSEA + BACK_PAIN + CONJUNCTIVITIS + ARTHRITIS +
ARTHRALGIA + PETECHIA + RETRO_ORBITAL_PAIN,
data = CONFIRMADOS, family = binomial)
# Sumário do modelo
summary(modelo)
# Extrair coeficientes ajustados e intervalos de confiança
odds_ratio <- tidy(modelo, exponentiate = TRUE)
# Mostrar os resultados
print(odds_ratio)
CONFIRMADOS_CSV <- CONFIRMADOS %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN)
write.csv(CONFIRMADOS_CSV %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN),
file = "confirmados.csv", row.names = FALSE)
CHIKUNGUNYA_CONFIRMADOS <- CHIKUNGUNYA %>%
filter(RESUL_PCR_ == 1) %>%
mutate(TYPE = "CHIKUNGUNYA")
# Instalar e carregar pacotes necessários
# Se algum pacote não estiver instalado, descomente a linha de instalação correspondente
# install.packages(c("remotes", "microdatasus", "pROC", "caret", "randomForest", "sf", "e1071"))
library(dplyr)
library(microdatasus)
library(survival)
library(ggplot2)
library(sf)
library(randomForest)
library(pROC)
library(caret)
library(e1071)  # Para SVM
library(epitools)
# Buscar e processar os dados do SINAN-DENGUE para o ano de 2022 no Espírito Santo
# DENGUE <- fetch_datasus(year_start = 2018, month_start = 1,
#                         year_end = 2022, month_end = 12, information_system = "SINAN-DENGUE")
DENGUE_CONFIRMADOS <- DENGUE %>%
filter(RESUL_SORO == 1 | RESUL_NS1 == 1 | RESUL_VI_N == 1 | RESUL_PCR_ == 1 | HISTOPA_N == 1 | IMUNOH_N == 1) %>%
mutate(TYPE = "DENGUE")
DENGUE_CONFIRMADOS <- DENGUE %>%
filter(RESUL_PCR_ == 1) %>%
mutate(TYPE = "DENGUE")
# Buscar e processar os dados do SINAN-DENGUE para o ano de 2022 no Espírito Santo
# CHIKUNGUNYA <- fetch_datasus(year_start = 2018, month_start = 1, uf = es,
#                              year_end = 2022, month_end = 12, information_system = "SINAN-CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS <- CHIKUNGUNYA %>%
filter(RES_CHIKS1 == 1 | RES_CHIKS2 == 1 | RESUL_PRNT == 1 | RESUL_PCR_ == 1 | HISTOPA_N == 1) %>%
mutate(TYPE = "CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS <- CHIKUNGUNYA %>%
filter(RESUL_PCR_ == 1) %>%
mutate(TYPE = "CHIKUNGUNYA")
CHIKUNGUNYA_CONFIRMADOS$PLAQ_MENOR <- as.character(CHIKUNGUNYA_CONFIRMADOS$PLAQ_MENOR)
DENGUE_CONFIRMADOS$PLAQ_MENOR <- as.character(DENGUE_CONFIRMADOS$PLAQ_MENOR)
# Mesclar os dois dataframes
CONFIRMADOS <- bind_rows(DENGUE_CONFIRMADOS, CHIKUNGUNYA_CONFIRMADOS)
# Renomear variáveis de sintomas
CONFIRMADOS <- CONFIRMADOS %>%
rename(AGE = NU_IDADE_N,
SEX = CS_SEXO,
RACE = CS_RACA,
SCHOOLING = CS_ESCOL_N,
FEVER = FEBRE,
MYALGIA = MIALGIA,
HEADACHE = CEFALEIA,
EXANTHEM = EXANTEMA,
VOMITING = VOMITO,
NAUSEA = NAUSEA,
BACK_PAIN = DOR_COSTAS,
CONJUNCTIVITIS = CONJUNTVIT,
ARTHRITIS = ARTRITE,
ARTHRALGIA = ARTRALGIA,
PETECHIA = PETEQUIA_N,
LEUKOPENIA = LEUCOPENIA,
RETRO_ORBITAL_PAIN = DOR_RETRO)
CONFIRMADOS <- CONFIRMADOS[CONFIRMADOS$AGE >= 4018,]
CONFIRMADOS$AGE <- CONFIRMADOS$AGE - 4000
CONFIRMADOS <- CONFIRMADOS[CONFIRMADOS$AGE < 60,]
# Convertendo os valores 2 para 0 e mantendo os valores 1 como 1
CONFIRMADOS <- CONFIRMADOS %>%
mutate(across(c(FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, LEUKOPENIA, RETRO_ORBITAL_PAIN),
~ ifelse(. == 2, 0, .)))
# Dados de idade para casos totais
idade <- CONFIRMADOS$AGE
# Resumo estatístico da idade para casos totais
summary_idade <- summary(idade)
print(summary_idade)
# Média e desvio padrão da idade para casos
media <- mean(idade)
desvio_padrao <- sd(idade)
cat("Média da idade para casos:", media, "\n")
cat("Desvio padrão da idade para casos:", desvio_padrao, "\n")
# Dados de idade para casos de dengue
idade_dengue <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "DENGUE"]
# Resumo estatístico da idade para casos de dengue
summary_idade_dengue <- summary(idade_dengue)
print(summary_idade_dengue)
# Média e desvio padrão da idade para casos de dengue
media_dengue <- mean(idade_dengue)
desvio_padrao_dengue <- sd(idade_dengue)
cat("Média da idade para casos de dengue:", media_dengue, "\n")
cat("Desvio padrão da idade para casos de dengue:", desvio_padrao_dengue, "\n")
# Dados de idade para casos de chikungunya
idade_chikungunya <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "CHIKUNGUNYA"]
# Resumo estatístico da idade para casos de chikungunya
summary_idade_chikungunya <- summary(idade_chikungunya)
print(summary_idade_chikungunya)
# Média e desvio padrão da idade para casos de chikungunya
media_chikungunya <- mean(idade_chikungunya)
desvio_padrao_chikungunya <- sd(idade_chikungunya)
cat("Média da idade para casos de chikungunya:", media_chikungunya, "\n")
cat("Desvio padrão da idade para casos de chikungunya:", desvio_padrao_chikungunya, "\n")
# Intervalo de confiança da média para casos de chikungunya
ic_mean_chikungunya <- t.test(idade_chikungunya)$conf.int
print(ic_mean_chikungunya)
# Dados de idade para casos de dengue
idade_dengue <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "DENGUE"]
# Dados de idade para casos de chikungunya
idade_chikungunya <- CONFIRMADOS$AGE[CONFIRMADOS$TYPE == "CHIKUNGUNYA"]
# Teste t para comparar médias
resultado_teste_t <- t.test(idade_dengue, idade_chikungunya)
# Exibir o resultado
print(resultado_teste_t)
CONFIRMADOS$SEX[is.na(CONFIRMADOS$SEX)] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "I"] <- "Undefined"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "M"] <- "Masculine"
CONFIRMADOS$SEX[CONFIRMADOS$SEX == "F"] <- "Feminine"
CONFIRMADOS$RACE[is.na(CONFIRMADOS$RACE)] <- "Missing"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 1] <- "White"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 2] <- "Black"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 3] <- "Yellow"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 4] <- "Brown"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 5] <- "Indigenous"
CONFIRMADOS$RACE[CONFIRMADOS$RACE == 9] <- "Missing"
# Selecionar as colunas de interesse e transformar as variáveis
CONFIRMADOS <- CONFIRMADOS %>%
select(SEX, RACE, TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN) %>%
mutate(across(everything(), as.factor))
# Número de colunas no dataframe CONFIRMADOS
num_colunas <- ncol(CONFIRMADOS)
# Inicializar o índice da coluna
i <- 1
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
print(paste("Dados sobre", nome_coluna))
# Criar a tabela de contingência 2x2
tabela_contingencia <- table(CONFIRMADOS$TYPE, dados_coluna)
print(paste("Tabela 2x2 -", nome_coluna))
print(tabela_contingencia)
# Calcular proporções da tabela de contingência
tabela_proporcoes <- prop.table(tabela_contingencia, 1)
print(paste("Proporções da tabela 2x2 -", nome_coluna))
print(tabela_proporcoes)
# Valor-p para a variável preditora
valor_p <- chisq.test(tabela_contingencia)
print(paste("Valor-p - ", nome_coluna))
print(valor_p[3])
i <- i + 1
}
# Inicializar o índice da coluna
i <- 1
# Lista para armazenar os resultados de odds ratio e intervalo de confiança
resultado <- list()
# Loop para percorrer todas as colunas, exceto a coluna de resposta (TIPO)
while (i <= ncol(CONFIRMADOS)) {
nome_coluna <- names(CONFIRMADOS)[i]
print(paste("Odds ratio para ", nome_coluna))
# Ignorar a coluna de resposta
if (nome_coluna == "TYPE") {
i <- i + 1
next
}
dados_coluna <- CONFIRMADOS[[i]]  # Extraindo os dados da coluna
# Ajustar modelo de regressão logística
modelo_logistico <- glm(TYPE ~ dados_coluna, family = binomial, data = CONFIRMADOS)
# Extrair coeficiente e intervalo de confiança para a variável preditora
coeficiente <- coef(modelo_logistico)[2]  # Coeficiente da variável preditora
conf_int <- confint(modelo_logistico)[2,]     # Intervalo de confiança para o coeficiente
# Calcular odds ratio e intervalo de confiança
odds_ratio <- exp(coeficiente)  # Odds ratio
lower_ci <- exp(conf_int[1])    # Limite inferior do intervalo de confiança
upper_ci <- exp(conf_int[2])    # Limite superior do intervalo de confiança
# Armazenar os resultados
resultado[[nome_coluna]] <- c(odds_ratio, lower_ci, upper_ci)
print(resultado[[nome_coluna]])
# Avançar para próxima coluna
i <- i + 1
}
# Resultados finais
resultado
library(broom)
# Ajuste do modelo de regressão logística
modelo <- glm(TYPE ~ FEVER + MYALGIA + HEADACHE + EXANTHEM + VOMITING +
NAUSEA + BACK_PAIN + CONJUNCTIVITIS + ARTHRITIS +
ARTHRALGIA + PETECHIA + RETRO_ORBITAL_PAIN,
data = CONFIRMADOS, family = binomial)
# Sumário do modelo
summary(modelo)
# Extrair coeficientes ajustados e intervalos de confiança
odds_ratio <- tidy(modelo, exponentiate = TRUE)
# Mostrar os resultados
print(odds_ratio)
CONFIRMADOS_CSV <- CONFIRMADOS %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN)
write.csv(CONFIRMADOS_CSV %>%
select(TYPE, FEVER, MYALGIA, HEADACHE, EXANTHEM, VOMITING, NAUSEA,
BACK_PAIN, CONJUNCTIVITIS, ARTHRITIS, ARTHRALGIA, PETECHIA, RETRO_ORBITAL_PAIN),
file = "confirmados.csv", row.names = FALSE)
